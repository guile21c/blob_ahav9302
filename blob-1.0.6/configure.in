dnl Process this file with autoconf to produce a configure script. -*- m4 -*-
dnl
dnl $Id: configure.in,v 1.13 2000/01/20 22:46:22 erikm Exp $
dnl

AC_REVISION([$Id: configure.in,v 1.13 2000/01/20 22:46:22 erikm Exp $])



dnl Init autoconf
AC_INIT(src/start.S)
AC_CONFIG_AUX_DIR(tools)




dnl Init automake
PACKAGE=blob
BLOB_MAJOR_VERSION=1
BLOB_MINOR_VERSION=0
BLOB_MICRO_VERSION=6
BLOB_VERSION=$BLOB_MAJOR_VERSION.$BLOB_MINOR_VERSION.$BLOB_MICRO_VERSION
VERSION=$BLOB_VERSION

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_CONFIG_HEADER(include/config.h)



dnl Init maintainer mode
AM_MAINTAINER_MODE




dnl Guess the host OS
AC_CANONICAL_HOST




dnl Checks for programs.
AC_PROG_CC
if test "x$ac_cv_prog_gcc" != "xyes" ; then
  AC_MSG_WARN("C compiler is not gcc. This may lead to problems!");
  AC_MSG_WARN("Trying to continue with $CC ...");
fi
AC_CHECK_PROGS(OBJCOPY, arm-linux-objcopy objcopy, echo)
AC_PROG_INSTALL
AC_PROG_LN_S



dnl Checks for libraries.



dnl Checks for header files.




dnl Find out where the Linux headers are
AC_ARG_WITH(linux-prefix,[  --with-linux-prefix=PFX Prefix where the ArmLinux sources live],
	linux_prefix="$withval",
	linux_prefix="/usr/src/linux")
CFLAGS=`echo $CFLAGS -I${linux_prefix}/include`




dnl Check for extra debug info
AC_ARG_ENABLE(blob-debug,
[  --enable-blob-debug     Enable run-time debug information],
[blob_debug_flag=$enable_blob_debug],
[blob_debug_flag=no])

if test "x$blob_debug_flag" = "xyes" ; then
  AC_DEFINE(BLOB_DEBUG)
fi




dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_INLINE



dnl Checks for library functions.




dnl Add C flags to display more warnings
AC_MSG_CHECKING(for C flags to get more warnings)
ac_save_CFLAGS="$CFLAGS"
AC_LANG_SAVE
if test "x$ac_cv_prog_gcc" = "xyes" ; then
  dnl gcc is the easiest C compiler
  warning_CFLAGS="-Wall"
else
  dnl Vendor supplied C compilers are a bit tricky
  case "$host_os" in
    dnl SGI IRIX with the MipsPRO C compiler
    irix*)
      AC_LANG_C
      CFLAGS="$CFLAGS -fullwarn"
      AC_TRY_COMPILE([#include <stdio.h>],[printf("test");],
        warning_CFLAGS="-fullwarn",)
      ;;

    dnl SunOS 4.x with the SparcWorks(?) acc compiler   
    sunos*)
        if "$CC" = "acc" ; then
	  AC_LANG_C
          CFLAGS="$CFLAGS -vc"
          AC_TRY_COMPILE([#include <stdio.h>],[printf("test");],
            warning_CFLAGS="-vc",)
        fi
      ;;

    dnl Unknown, do nothing
    *)
      warning_CFLAGS="none"
      ;;
  esac
fi
AC_LANG_RESTORE
CFLAGS="$ac_save_CFLAGS"
if test "$warning_CFLAGS" = "none" ; then
  AC_MSG_RESULT(none)
else
  CFLAGS="$CFLAGS $warning_CFLAGS"
  AC_MSG_RESULT($warning_CFLAGS)
fi  


dnl Remove the "-g" flag from CFLAGS and LDFLAGS
CFLAGS=`echo $CFLAGS | sed 's/\ *-g\ */\ /'`
LDFLAGS=`echo $LDFLAGS | sed 's/\ *-g\ */\ /'`

dnl Add some StrongARM specific flags
CFLAGS=`echo $CFLAGS -nostdinc -mcpu=strongarm110 -mapcs-32 -fomit-frame-pointer -fPIC`
LDFLAGS=`echo $LDFLAGS -static -nostdlib`
OCFLAGS="-O binary -R .note -R .comment -S"
AC_SUBST(OCFLAGS)


AC_OUTPUT(Makefile
include/Makefile
src/Makefile
tools/Makefile)


echo ""
echo "Configuration"
echo "------------------------------------------------------------------------"
echo "C compiler                  ${CC}"
echo "C flags                     ${CFLAGS}"
echo "Linker flags                ${LDFLAGS}"
echo "Objcopy tool                ${OBJCOPY}"
echo "Objcopy flags               ${OCFLAGS}"
echo "Run-time debug information  ${blob_debug_flag}"
echo ""
